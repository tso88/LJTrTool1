<?php

namespace Proxies\__CG__\LJTrTool\RegistrationBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Event extends \LJTrTool\RegistrationBundle\Entity\Event implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'LJTrTool\\RegistrationBundle\\Entity\\Event' . "\0" . 'eventId', '' . "\0" . 'LJTrTool\\RegistrationBundle\\Entity\\Event' . "\0" . 'eventLinkName', '' . "\0" . 'LJTrTool\\RegistrationBundle\\Entity\\Event' . "\0" . 'eventName', '' . "\0" . 'LJTrTool\\RegistrationBundle\\Entity\\Event' . "\0" . 'startTime', '' . "\0" . 'LJTrTool\\RegistrationBundle\\Entity\\Event' . "\0" . 'endTime', '' . "\0" . 'LJTrTool\\RegistrationBundle\\Entity\\Event' . "\0" . 'place', '' . "\0" . 'LJTrTool\\RegistrationBundle\\Entity\\Event' . "\0" . 'description', '' . "\0" . 'LJTrTool\\RegistrationBundle\\Entity\\Event' . "\0" . 'created', '' . "\0" . 'LJTrTool\\RegistrationBundle\\Entity\\Event' . "\0" . 'updated', '' . "\0" . 'LJTrTool\\RegistrationBundle\\Entity\\Event' . "\0" . 'divisionApprovals', '' . "\0" . 'LJTrTool\\RegistrationBundle\\Entity\\Event' . "\0" . 'roleApprovals');
        }

        return array('__isInitialized__', '' . "\0" . 'LJTrTool\\RegistrationBundle\\Entity\\Event' . "\0" . 'eventId', '' . "\0" . 'LJTrTool\\RegistrationBundle\\Entity\\Event' . "\0" . 'eventLinkName', '' . "\0" . 'LJTrTool\\RegistrationBundle\\Entity\\Event' . "\0" . 'eventName', '' . "\0" . 'LJTrTool\\RegistrationBundle\\Entity\\Event' . "\0" . 'startTime', '' . "\0" . 'LJTrTool\\RegistrationBundle\\Entity\\Event' . "\0" . 'endTime', '' . "\0" . 'LJTrTool\\RegistrationBundle\\Entity\\Event' . "\0" . 'place', '' . "\0" . 'LJTrTool\\RegistrationBundle\\Entity\\Event' . "\0" . 'description', '' . "\0" . 'LJTrTool\\RegistrationBundle\\Entity\\Event' . "\0" . 'created', '' . "\0" . 'LJTrTool\\RegistrationBundle\\Entity\\Event' . "\0" . 'updated', '' . "\0" . 'LJTrTool\\RegistrationBundle\\Entity\\Event' . "\0" . 'divisionApprovals', '' . "\0" . 'LJTrTool\\RegistrationBundle\\Entity\\Event' . "\0" . 'roleApprovals');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Event $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function onCreation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'onCreation', array());

        return parent::onCreation();
    }

    /**
     * {@inheritDoc}
     */
    public function onUpdate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'onUpdate', array());

        return parent::onUpdate();
    }

    /**
     * {@inheritDoc}
     */
    public function addDivisionApproval(\LJTrTool\RegistrationBundle\Entity\DivisionApproval $divisionApproval)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addDivisionApproval', array($divisionApproval));

        return parent::addDivisionApproval($divisionApproval);
    }

    /**
     * {@inheritDoc}
     */
    public function addRoleApproval(\LJTrTool\RegistrationBundle\Entity\RoleApproval $roleApproval)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRoleApproval', array($roleApproval));

        return parent::addRoleApproval($roleApproval);
    }

    /**
     * {@inheritDoc}
     */
    public function getDivisionApprovals()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDivisionApprovals', array());

        return parent::getDivisionApprovals();
    }

    /**
     * {@inheritDoc}
     */
    public function getEndTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEndTime', array());

        return parent::getEndTime();
    }

    /**
     * {@inheritDoc}
     */
    public function getEventId()
    {
        if ($this->__isInitialized__ === false) {
            return  parent::getEventId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEventId', array());

        return parent::getEventId();
    }

    /**
     * {@inheritDoc}
     */
    public function getEventLinkName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEventLinkName', array());

        return parent::getEventLinkName();
    }

    /**
     * {@inheritDoc}
     */
    public function getEventName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEventName', array());

        return parent::getEventName();
    }

    /**
     * {@inheritDoc}
     */
    public function getRoleApprovals()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoleApprovals', array());

        return parent::getRoleApprovals();
    }

    /**
     * {@inheritDoc}
     */
    public function getStartTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStartTime', array());

        return parent::getStartTime();
    }

    /**
     * {@inheritDoc}
     */
    public function removeDivisionApproval(\LJTrTool\RegistrationBundle\Entity\DivisionApproval $divisionApproval)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeDivisionApproval', array($divisionApproval));

        return parent::removeDivisionApproval($divisionApproval);
    }

    /**
     * {@inheritDoc}
     */
    public function removeRoleApproval(\LJTrTool\RegistrationBundle\Entity\RoleApproval $roleApproval)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeRoleApproval', array($roleApproval));

        return parent::removeRoleApproval($roleApproval);
    }

    /**
     * {@inheritDoc}
     */
    public function setDivisionApprovals($divisionApprovals)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDivisionApprovals', array($divisionApprovals));

        return parent::setDivisionApprovals($divisionApprovals);
    }

    /**
     * {@inheritDoc}
     */
    public function setEndTime($endTime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEndTime', array($endTime));

        return parent::setEndTime($endTime);
    }

    /**
     * {@inheritDoc}
     */
    public function setEventId($eventId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEventId', array($eventId));

        return parent::setEventId($eventId);
    }

    /**
     * {@inheritDoc}
     */
    public function setEventLinkName($eventLinkName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEventLinkName', array($eventLinkName));

        return parent::setEventLinkName($eventLinkName);
    }

    /**
     * {@inheritDoc}
     */
    public function setEventName($eventName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEventName', array($eventName));

        return parent::setEventName($eventName);
    }

    /**
     * {@inheritDoc}
     */
    public function setRoleApprovals($roleApprovals)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRoleApprovals', array($roleApprovals));

        return parent::setRoleApprovals($roleApprovals);
    }

    /**
     * {@inheritDoc}
     */
    public function setStartTime($startTime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStartTime', array($startTime));

        return parent::setStartTime($startTime);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', array());

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', array($description));

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getPlace()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPlace', array());

        return parent::getPlace();
    }

    /**
     * {@inheritDoc}
     */
    public function setPlace($place)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPlace', array($place));

        return parent::setPlace($place);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreated', array());

        return parent::getCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreated($created)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreated', array($created));

        return parent::setCreated($created);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdated', array());

        return parent::getUpdated();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdated($updated)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdated', array($updated));

        return parent::setUpdated($updated);
    }

}

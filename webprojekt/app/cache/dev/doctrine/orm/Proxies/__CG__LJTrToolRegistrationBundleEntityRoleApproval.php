<?php

namespace Proxies\__CG__\LJTrTool\RegistrationBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class RoleApproval extends \LJTrTool\RegistrationBundle\Entity\RoleApproval implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'LJTrTool\\RegistrationBundle\\Entity\\RoleApproval' . "\0" . 'roleApprovalId', '' . "\0" . 'LJTrTool\\RegistrationBundle\\Entity\\RoleApproval' . "\0" . 'role', '' . "\0" . 'LJTrTool\\RegistrationBundle\\Entity\\RoleApproval' . "\0" . 'event', '' . "\0" . 'LJTrTool\\RegistrationBundle\\Entity\\RoleApproval' . "\0" . 'registration_startTime', '' . "\0" . 'LJTrTool\\RegistrationBundle\\Entity\\RoleApproval' . "\0" . 'registration_endTime', '' . "\0" . 'LJTrTool\\RegistrationBundle\\Entity\\RoleApproval' . "\0" . 'attendanceTimes', '' . "\0" . 'LJTrTool\\RegistrationBundle\\Entity\\RoleApproval' . "\0" . 'showRole');
        }

        return array('__isInitialized__', '' . "\0" . 'LJTrTool\\RegistrationBundle\\Entity\\RoleApproval' . "\0" . 'roleApprovalId', '' . "\0" . 'LJTrTool\\RegistrationBundle\\Entity\\RoleApproval' . "\0" . 'role', '' . "\0" . 'LJTrTool\\RegistrationBundle\\Entity\\RoleApproval' . "\0" . 'event', '' . "\0" . 'LJTrTool\\RegistrationBundle\\Entity\\RoleApproval' . "\0" . 'registration_startTime', '' . "\0" . 'LJTrTool\\RegistrationBundle\\Entity\\RoleApproval' . "\0" . 'registration_endTime', '' . "\0" . 'LJTrTool\\RegistrationBundle\\Entity\\RoleApproval' . "\0" . 'attendanceTimes', '' . "\0" . 'LJTrTool\\RegistrationBundle\\Entity\\RoleApproval' . "\0" . 'showRole');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (RoleApproval $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getRoleApprovalId()
    {
        if ($this->__isInitialized__ === false) {
            return  parent::getRoleApprovalId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoleApprovalId', array());

        return parent::getRoleApprovalId();
    }

    /**
     * {@inheritDoc}
     */
    public function getRole()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRole', array());

        return parent::getRole();
    }

    /**
     * {@inheritDoc}
     */
    public function getEvent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEvent', array());

        return parent::getEvent();
    }

    /**
     * {@inheritDoc}
     */
    public function getRegistrationStartTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRegistrationStartTime', array());

        return parent::getRegistrationStartTime();
    }

    /**
     * {@inheritDoc}
     */
    public function getRegistrationEndTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRegistrationEndTime', array());

        return parent::getRegistrationEndTime();
    }

    /**
     * {@inheritDoc}
     */
    public function setRoleApprovalId($roleApprovalId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRoleApprovalId', array($roleApprovalId));

        return parent::setRoleApprovalId($roleApprovalId);
    }

    /**
     * {@inheritDoc}
     */
    public function setRole($role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRole', array($role));

        return parent::setRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function setEvent($event)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEvent', array($event));

        return parent::setEvent($event);
    }

    /**
     * {@inheritDoc}
     */
    public function setRegistrationStartTime($registration_startTime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRegistrationStartTime', array($registration_startTime));

        return parent::setRegistrationStartTime($registration_startTime);
    }

    /**
     * {@inheritDoc}
     */
    public function setRegistrationEndTime($registration_endTime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRegistrationEndTime', array($registration_endTime));

        return parent::setRegistrationEndTime($registration_endTime);
    }

    /**
     * {@inheritDoc}
     */
    public function isShowRole()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isShowRole', array());

        return parent::isShowRole();
    }

    /**
     * {@inheritDoc}
     */
    public function setShowRole($showRole)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setShowRole', array($showRole));

        return parent::setShowRole($showRole);
    }

    /**
     * {@inheritDoc}
     */
    public function getAttendanceTimes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAttendanceTimes', array());

        return parent::getAttendanceTimes();
    }

    /**
     * {@inheritDoc}
     */
    public function setAttendanceTimes($attendanceTimes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAttendanceTimes', array($attendanceTimes));

        return parent::setAttendanceTimes($attendanceTimes);
    }

    /**
     * {@inheritDoc}
     */
    public function addAttendanceTime(\LJTrTool\RegistrationBundle\Entity\AttendanceTime $attendanceTime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAttendanceTime', array($attendanceTime));

        return parent::addAttendanceTime($attendanceTime);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAttendanceTime(\LJTrTool\RegistrationBundle\Entity\AttendanceTime $attendanceTime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAttendanceTime', array($attendanceTime));

        return parent::removeAttendanceTime($attendanceTime);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', array());

        return parent::__toString();
    }

}
